% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/format_data.R
\name{format_data}
\alias{format_data}
\title{Format data for use with HIP}
\usage{
format_data(X_train, Y_train=NULL, id_var=NULL,
subgroup_var=NULL, outcome_var=NULL, X_test=NULL, Y_test=NULL,
family="", data_source="")
}
\arguments{
\item{X_train}{list of dataframes - list of D dataframes containing X training data (where D is the number of data views).
NOTE: X_train should also contain the subgroup_var if it is not contained in the Y_train data.}

\item{Y_train}{list of dataframes - list of D dataframes containing Y training data}

\item{id_var}{string - name of ID variable in data}

\item{subgroup_var}{string - name of subgroup variable in data}

\item{outcome_var}{string - name of outcome variable in data}

\item{X_test}{list of dataframes - list of D dataframes containing X test data, if available}

\item{Y_test}{list of datamframes - list of D dataframes containing Y test data, if available}

\item{family}{string - family of outcome data; one of either "gaussian", "multiclass", "poisson", or "zip"}
}
\value{
Returns a list with the following:\tabular{ll}{
   \code{X} \tab matrix list - Contains training data X^d,s matrices; access as \code{data$X[[d]][[s]]} \cr
   \code{Y} \tab matrix list - Contains training data Y^s matrices; access as \code{data$Y[[d]][[s]]} \cr
   \code{X_test} \tab matrix list - Contains test data X^d,s matrices; access as \code{data$X_test[[d]][[s]]} \cr
   \code{Y_test} \tab matrix list - Contains test data Y^s matrices; access as \code{data$Y_test[[d]][[s]]} \cr
   \code{D} \tab int - Number of data views \cr
   \code{S} \tab int - Number of unique subgroups \cr
   \code{sub_vec} \tab int vec - Vector with labels for subgroups \cr
   \code{var_list} \tab string list - D lists containing names of variables in X data \cr
}
}
\description{
User-supplied data must be formatted properly to work with
HIP functions such as \code{select_lambda} or \code{HIP_test_eval}. Use this function to format the data, which will
return a list containing training/testing data converted to PyTorch tensors
and useful information such as the number of data views and subgroups. Note, either X or Y data
must contain the subgroup variable, and each dataframe must have an ID variable.
Y data should contain an outcome variable, which may belong to a Gaussian, multiclass, Poisson, or ZIP family.
You may exclude the Y data if you simply want to format X data for use in prediction functions such as \code{HIP_pred}.
See the example below for a demonstration of the function using a COVID-19 dataset included in the \code{HIP} package.
}
\details{
As HIP uses functions integrated in Python, it is necessary to convert dataframes
to PyTorch tensors prior to use. This function also gathers training and testing
data together for use in functions such as \code{HIP_test_eval}. See individual function
documentation for examples. Also note that data from the \code{generate_data} function is
already formatted, so they do not need to be fed into this function.
}
\examples{
# Read in COVID Data
data("covid_data")

# Join data and declare variables for IDs, subgroups, and outcomes
X_train <- list(covid_data$X_train_genomic, covid_data$X_train_proteomic)
X_test <- list(covid_data$X_test_genomic, covid_data$X_test_proteomic)

id_var <- 'ID'
subgroup_var <- 'Sex'
S <- length(unique(covid_data$Y_train[[subgroup_var]]))
outcome_var <- 'HFD45'
D <- 2

# Structure data and convert it to Python format
formatted_data <- format_data(X_train, covid_data$Y_train, id_var, subgroup_var, outcome_var,
                              X_test, covid_data$Y_test, family='gaussian')

}
